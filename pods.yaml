apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-12T19:27:20Z"
    generateName: ghost-84fd86754d-
    labels:
      app: ghost
      pod-template-hash: 84fd86754d
    name: ghost-84fd86754d-w2nhk
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ghost-84fd86754d
      uid: da70e577-44fc-11e9-8d88-94c6911d33aa
    resourceVersion: "30324663"
    selfLink: /api/v1/namespaces/default/pods/ghost-84fd86754d-w2nhk
    uid: da8a117d-44fc-11e9-8d88-94c6911d33aa
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ghost-configmap
      - secretRef:
          name: ghost-secret
      image: ghost:latest
      imagePullPolicy: Always
      name: ghost
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/ghost/content
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: content
      persistentVolumeClaim:
        claimName: ghost-content
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-12T19:27:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-12T19:27:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c694c4ddee7f7e6c0258a76852cb52f56ee4d57b1b8ab489182f86dd12a3009d
      image: ghost:latest
      imageID: docker-pullable://ghost@sha256:fec5e2a69951ac65369f787b3eb1e2d24ac8e9024e6aaaf69aeed3fb0e998b2a
      lastState:
        terminated:
          containerID: docker://0f1204e5db06c088dfb6b97947f4a2dd67d6c402751d5aaefe14759581c2f0bc
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:54:39Z"
      name: ghost
      ready: true
      restartCount: 15
      state:
        running:
          startedAt: "2019-05-23T18:33:25Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.44
    qosClass: BestEffort
    startTime: "2019-03-12T19:27:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-12T19:27:20Z"
    generateName: ghost-db-89b755bf7-
    labels:
      app: ghost-db
      pod-template-hash: 89b755bf7
    name: ghost-db-89b755bf7-96z9r
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ghost-db-89b755bf7
      uid: da715bc9-44fc-11e9-8d88-94c6911d33aa
    resourceVersion: "30324464"
    selfLink: /api/v1/namespaces/default/pods/ghost-db-89b755bf7-96z9r
    uid: da8f9c12-44fc-11e9-8d88-94c6911d33aa
  spec:
    containers:
    - env:
      - name: MYSQL_ROOT_PASSWORD
        value: mysql_rootpasswd
      image: mysql:5.7
      imagePullPolicy: IfNotPresent
      name: ghost-db
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: ghost-db
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: ghost-db
      persistentVolumeClaim:
        claimName: ghost-db
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-12T19:27:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:35:57Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:35:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-12T19:27:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://01a0ecf6d0f48a68ef5a9c08c946517444f02c3a80e8673c760fdf91ad5117c2
      image: mysql:5.7
      imageID: docker-pullable://mysql@sha256:c23e9bfe66eeffc990cf6bce4bb0e9c5c85eb908170f3b3dde3e9a12c5a91689
      lastState:
        terminated:
          containerID: docker://762abc1483282cacd30c3eaa7863126714da9ca04c3967376a7bc9c0d54ae3f6
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: ghost-db
      ready: true
      restartCount: 20
      state:
        running:
          startedAt: "2019-05-23T18:35:27Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.54
    qosClass: BestEffort
    startTime: "2019-03-12T19:27:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-24T09:55:50Z"
    generateName: grafana-6d5f7d8c-
    labels:
      app: grafana
      pod-template-hash: 6d5f7d8c
      release: grafana
    name: grafana-6d5f7d8c-4dvmz
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-6d5f7d8c
      uid: 1c6f0931-7e0a-11e9-8dca-94c6911d33aa
    resourceVersion: "30324633"
    selfLink: /api/v1/namespaces/default/pods/grafana-6d5f7d8c-4dvmz
    uid: 1c93e4d1-7e0a-11e9-8dca-94c6911d33aa
  spec:
    containers:
    - env:
      - name: GF_SECURITY_ADMIN_USER
        valueFrom:
          secretKeyRef:
            key: admin-user
            name: grafana
      - name: GF_SECURITY_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: grafana
      image: grafana/grafana:6.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: grafana
      ports:
      - containerPort: 80
        name: service
        protocol: TCP
      - containerPort: 3000
        name: grafana
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
        subPath: grafana.ini
      - mountPath: /etc/grafana/ldap.toml
        name: ldap
        subPath: ldap.toml
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: grafana-token-2gxwd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 472
      runAsUser: 472
    serviceAccount: grafana
    serviceAccountName: grafana
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: grafana
      name: config
    - name: ldap
      secret:
        defaultMode: 420
        items:
        - key: ldap-toml
          path: ldap.toml
        secretName: grafana
    - emptyDir: {}
      name: storage
    - name: grafana-token-2gxwd
      secret:
        defaultMode: 420
        secretName: grafana-token-2gxwd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T09:55:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T09:57:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T09:57:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T09:55:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://824d31153a5cd73c4ad6d3f3e7b377406f0bc611593e0feda40f62136836b6a5
      image: grafana/grafana:6.2.0
      imageID: docker-pullable://grafana/grafana@sha256:9e7fe9c7903a77107b28f63842f1fd1f358668933c0c51c0220c9889f1a2d878
      lastState: {}
      name: grafana
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-05-24T09:56:37Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.68
    qosClass: BestEffort
    startTime: "2019-05-24T09:55:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-02-04T03:57:27Z"
    generateName: ingress-default-backend-55c6dddf9b-
    labels:
      pod-template-hash: 55c6dddf9b
      run: ingress-default-backend
    name: ingress-default-backend-55c6dddf9b-ll496
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ingress-default-backend-55c6dddf9b
      uid: fc9a9495-2830-11e9-b040-94c6911d33aa
    resourceVersion: "30324615"
    selfLink: /api/v1/namespaces/default/pods/ingress-default-backend-55c6dddf9b-ll496
    uid: fcbc3d8b-2830-11e9-b040-94c6911d33aa
  spec:
    containers:
    - image: gcr.io/google_containers/defaultbackend:1.0
      imagePullPolicy: IfNotPresent
      name: ingress-default-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-04T03:57:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-04T03:57:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://85978b342da834f7dbe8367b6c3df07b5b879a7984741138abb244366151168e
      image: gcr.io/google_containers/defaultbackend:1.0
      imageID: docker-pullable://gcr.io/google_containers/defaultbackend@sha256:ee3aa1187023d0197e3277833f19d9ef7df26cee805fef32663e06c7412239f9
      lastState:
        terminated:
          containerID: docker://ad164c58944546cf61213a2733620f2bc0b146d98f05066edf43955d9040d2e5
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: ingress-default-backend
      ready: true
      restartCount: 33
      state:
        running:
          startedAt: "2019-05-23T18:36:30Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.59
    qosClass: BestEffort
    startTime: "2019-02-04T03:57:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-24T16:25:09Z"
    generateName: laravel-echo-server-
    labels:
      app: laravel-echo-server
      controller-revision-hash: laravel-echo-server-7795f6597c
      statefulset.kubernetes.io/pod-name: laravel-echo-server-0
    name: laravel-echo-server-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: laravel-echo-server
      uid: 7f77de72-7e40-11e9-8dca-94c6911d33aa
    resourceVersion: "30324671"
    selfLink: /api/v1/namespaces/default/pods/laravel-echo-server-0
    uid: 7f865d90-7e40-11e9-8dca-94c6911d33aa
  spec:
    containers:
    - env:
      - name: ECHO_ALLOW_CORS
        value: "true"
      - name: ECHO_ALLOW_HEADERS
        value: '*'
      - name: ECHO_ALLOW_METHODS
        value: '*'
      - name: ECHO_ALLOW_ORIGIN
        value: '*'
      - name: ECHO_PROTOCOL
        value: http
      - name: ECHO_REDIS_HOSTNAME
        value: redis-master.default.svc.cluster.local
      - name: ECHO_REDIS_PORT
        value: "6379"
      - name: LARAVEL_ECHO_SERVER_AUTH_HOST
        value: http://webhook
      - name: LARAVEL_ECHO_SERVER_HOST
        value: 0.0.0.0
      - name: LARAVEL_ECHO_SERVER_PORT
        value: "6001"
      image: mintopia/laravel-echo-server
      imagePullPolicy: Always
      name: laravel-echo-server
      ports:
      - containerPort: 6001
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: laravel-echo-server-0
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: laravel-echo-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:25:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:25:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:25:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:25:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://344cb777a4f69821d3e1b2bea567023451889e6ee1d70a03cfcf02fa4d9e3c69
      image: mintopia/laravel-echo-server:latest
      imageID: docker-pullable://mintopia/laravel-echo-server@sha256:3038e4a81891536a8e8da819b591a8faf8a2f406a7c79e1c5c1764c18a2d257d
      lastState: {}
      name: laravel-echo-server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-05-24T16:25:24Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.70
    qosClass: BestEffort
    startTime: "2019-05-24T16:25:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-02-14T17:11:29Z"
    generateName: nextcloud-58bbd96bb8-
    labels:
      app: nextcloud
      pod-template-hash: 58bbd96bb8
    name: nextcloud-58bbd96bb8-ww6k7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nextcloud-58bbd96bb8
      uid: 91c6cec8-307b-11e9-ae27-94c6911d33aa
    resourceVersion: "30324474"
    selfLink: /api/v1/namespaces/default/pods/nextcloud-58bbd96bb8-ww6k7
    uid: 91ed9816-307b-11e9-ae27-94c6911d33aa
  spec:
    containers:
    - env:
      - name: MYSQL_DATABASE
        value: nextcloud
      - name: MYSQL_HOST
        value: nextcloud-db.default.svc.cluster.local
      - name: MYSQL_PASSWORD
        value: nextcloud
      - name: MYSQL_USER
        value: nextcloud
      - name: PGID
        value: "1000"
      - name: PUID
        value: "1000"
      image: linuxserver/nextcloud
      imagePullPolicy: Always
      name: nextcloud
      ports:
      - containerPort: 443
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /data
        name: data
      - mountPath: /ext-data/home/jphuc96
        name: local-home
      - mountPath: /ext-data/opt
        name: local-opt
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nextcloud-config-claim
    - name: data
      persistentVolumeClaim:
        claimName: nextcloud-data-claim
    - name: local-home
      persistentVolumeClaim:
        claimName: nextcloud-local-home-claim
    - name: local-opt
      persistentVolumeClaim:
        claimName: nextcloud-local-opt-claim
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-14T17:11:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:04Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-14T17:11:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://12d7138e634f02a69c28660645d891f110e000cb2f8b7d1517e5e635831c6300
      image: linuxserver/nextcloud:latest
      imageID: docker-pullable://linuxserver/nextcloud@sha256:220e8f43fcdceecde4cca6d3be91a32a0ff87450adf820fab946506dd9d8b9e0
      lastState:
        terminated:
          containerID: docker://38131ce07d9a138a8e74261e52e4638d850586dbd5e9b17ee08ea7b6e3ae2401
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:54:46Z"
      name: nextcloud
      ready: true
      restartCount: 26
      state:
        running:
          startedAt: "2019-05-23T18:32:50Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.39
    qosClass: BestEffort
    startTime: "2019-02-14T17:11:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-02-14T17:11:29Z"
    generateName: nextcloud-db-74f785cdfd-
    labels:
      app: nextcloud-db
      pod-template-hash: 74f785cdfd
    name: nextcloud-db-74f785cdfd-gftkk
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nextcloud-db-74f785cdfd
      uid: 91c8bc0d-307b-11e9-ae27-94c6911d33aa
    resourceVersion: "30324684"
    selfLink: /api/v1/namespaces/default/pods/nextcloud-db-74f785cdfd-gftkk
    uid: 91ed9789-307b-11e9-ae27-94c6911d33aa
  spec:
    containers:
    - args:
      - --transaction-isolation=READ-COMMITTED
      - --binlog-format=ROW
      env:
      - name: MYSQL_DATABASE
        value: nextcloud
      - name: MYSQL_PASSWORD
        value: nextcloud
      - name: MYSQL_ROOT_PASSWORD
        value: mysql_rootpasswd
      - name: MYSQL_USER
        value: nextcloud
      image: mariadb
      imagePullPolicy: Always
      name: nextcloud-db
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: nextcloud-db
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: nextcloud-db
      persistentVolumeClaim:
        claimName: nextcloud-db-claim
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-14T17:11:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-14T17:11:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e59b122f8498823ce7f9008dd3f045e8c7d23c47401a32c09638a97c58909471
      image: mariadb:latest
      imageID: docker-pullable://mariadb@sha256:db6e7bda67ea88efb00ba4ad82cb72dfee8938935914ae0948f6af523d398ca2
      lastState:
        terminated:
          containerID: docker://5bd9276b922cf24f93b8db8e1c5ee7ee4f4a660469544242cddb552b7833fdfc
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: nextcloud-db
      ready: true
      restartCount: 27
      state:
        running:
          startedAt: "2019-05-23T18:36:43Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.57
    qosClass: BestEffort
    startTime: "2019-02-14T17:11:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-24T07:48:28Z"
    generateName: postgresql-postgresql-
    labels:
      app: postgresql
      chart: postgresql-3.9.5
      controller-revision-hash: postgresql-postgresql-f5f499b4b
      heritage: Tiller
      release: postgresql
      role: master
      statefulset.kubernetes.io/pod-name: postgresql-postgresql-0
    name: postgresql-postgresql-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: postgresql-postgresql
      uid: 50f1964c-7df8-11e9-8dca-94c6911d33aa
    resourceVersion: "30324601"
    selfLink: /api/v1/namespaces/default/pods/postgresql-postgresql-0
    uid: 5144d774-7df8-11e9-8dca-94c6911d33aa
  spec:
    containers:
    - env:
      - name: POSTGRESQL_USERNAME
        value: postgres
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgresql-password
            name: postgresql-postgresql
      - name: POSTGRESQL_DATABASE
        value: postgres
      image: docker.io/bitnami/postgresql:11.3.0
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - exec pg_isready -U "postgres" -d "postgres" -h localhost
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgresql-postgresql
      ports:
      - containerPort: 5432
        name: postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - exec pg_isready -U "postgres" -d "postgres" -h localhost
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/postgresql
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: postgresql-postgresql-0
    initContainers:
    - command:
      - sh
      - -c
      - |
        chown -R 1001:1001 /bitnami
        if [ -d /bitnami/postgresql/data ]; then
          chmod  0700 /bitnami/postgresql/data;
        fi
      image: docker.io/bitnami/minideb:latest
      imagePullPolicy: Always
      name: init-chmod-data
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        procMount: Default
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/postgresql
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    subdomain: postgresql-postgresql-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-postgresql-postgresql-0
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:48:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:49:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:49:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:48:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e1e727c5c0d6d2dd9fa6bb1bced8414119293cdedfab9a559f68457c33294b09
      image: bitnami/postgresql:11.3.0
      imageID: docker-pullable://bitnami/postgresql@sha256:9ac21d3104f16fdc758660df4ccc1c917039f56caa6bf306b58557e54699ff04
      lastState: {}
      name: postgresql-postgresql
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-05-24T07:48:47Z"
    hostIP: 192.168.0.6
    initContainerStatuses:
    - containerID: docker://dd60818715d162fd138822f5f088b1bcec126fd4f4e660764fafe2743f93ef87
      image: bitnami/minideb:latest
      imageID: docker-pullable://bitnami/minideb@sha256:2bee8585611d24d744472f8944a6c6c9a9823a0760b8ea587f2c0bfef298d2ef
      lastState: {}
      name: init-chmod-data
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://dd60818715d162fd138822f5f088b1bcec126fd4f4e660764fafe2743f93ef87
          exitCode: 0
          finishedAt: "2019-05-24T07:48:39Z"
          reason: Completed
          startedAt: "2019-05-24T07:48:39Z"
    phase: Running
    podIP: 10.244.0.63
    qosClass: Burstable
    startTime: "2019-05-24T07:48:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-24T07:49:01Z"
    generateName: postgresql-postgresql-
    labels:
      app: postgresql
      chart: postgresql-3.9.5
      controller-revision-hash: postgresql-postgresql-f5f499b4b
      heritage: Tiller
      release: postgresql
      role: master
      statefulset.kubernetes.io/pod-name: postgresql-postgresql-1
    name: postgresql-postgresql-1
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: postgresql-postgresql
      uid: 50f1964c-7df8-11e9-8dca-94c6911d33aa
    resourceVersion: "30324675"
    selfLink: /api/v1/namespaces/default/pods/postgresql-postgresql-1
    uid: 64ee3544-7df8-11e9-8dca-94c6911d33aa
  spec:
    containers:
    - env:
      - name: POSTGRESQL_USERNAME
        value: postgres
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgresql-password
            name: postgresql-postgresql
      - name: POSTGRESQL_DATABASE
        value: postgres
      image: docker.io/bitnami/postgresql:11.3.0
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - exec pg_isready -U "postgres" -d "postgres" -h localhost
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgresql-postgresql
      ports:
      - containerPort: 5432
        name: postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - exec pg_isready -U "postgres" -d "postgres" -h localhost
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/postgresql
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: postgresql-postgresql-1
    initContainers:
    - command:
      - sh
      - -c
      - |
        chown -R 1001:1001 /bitnami
        if [ -d /bitnami/postgresql/data ]; then
          chmod  0700 /bitnami/postgresql/data;
        fi
      image: docker.io/bitnami/minideb:latest
      imagePullPolicy: Always
      name: init-chmod-data
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        procMount: Default
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/postgresql
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    subdomain: postgresql-postgresql-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-postgresql-postgresql-1
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:49:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:49:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:49:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T07:49:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://80442dac2e02c6f857e26f83ffd4a5115bba7f274fb4285a84c8c650c4937764
      image: bitnami/postgresql:11.3.0
      imageID: docker-pullable://bitnami/postgresql@sha256:9ac21d3104f16fdc758660df4ccc1c917039f56caa6bf306b58557e54699ff04
      lastState: {}
      name: postgresql-postgresql
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-05-24T07:49:19Z"
    hostIP: 192.168.0.6
    initContainerStatuses:
    - containerID: docker://8bfb41635c96fc0c5015b3222125a0a9bb9af7c6b63d95e0c1cbad7decfde2ce
      image: bitnami/minideb:latest
      imageID: docker-pullable://bitnami/minideb@sha256:2bee8585611d24d744472f8944a6c6c9a9823a0760b8ea587f2c0bfef298d2ef
      lastState: {}
      name: init-chmod-data
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://8bfb41635c96fc0c5015b3222125a0a9bb9af7c6b63d95e0c1cbad7decfde2ce
          exitCode: 0
          finishedAt: "2019-05-24T07:49:11Z"
          reason: Completed
          startedAt: "2019-05-24T07:49:11Z"
    phase: Running
    podIP: 10.244.0.64
    qosClass: Burstable
    startTime: "2019-05-24T07:49:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-11T17:51:06Z"
    generateName: prometheus-alertmanager-548d7dc586-
    labels:
      app: prometheus
      chart: prometheus-8.6.1
      component: alertmanager
      heritage: Tiller
      pod-template-hash: 548d7dc586
      release: prometheus
    name: prometheus-alertmanager-548d7dc586-jncwr
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-alertmanager-548d7dc586
      uid: 3e6ed1c2-4426-11e9-8d88-94c6911d33aa
    resourceVersion: "30324494"
    selfLink: /api/v1/namespaces/default/pods/prometheus-alertmanager-548d7dc586-jncwr
    uid: 3ea1b29b-4426-11e9-8d88-94c6911d33aa
  spec:
    containers:
    - args:
      - --config.file=/etc/config/alertmanager.yml
      - --storage.path=/data
      - --cluster.advertise-address=$(POD_IP):6783
      - --web.external-url=/
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: prom/alertmanager:v0.15.2
      imagePullPolicy: IfNotPresent
      name: prometheus-alertmanager
      ports:
      - containerPort: 9093
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /#/status
          port: 9093
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-alertmanager-token-crk8p
        readOnly: true
    - args:
      - --volume-dir=/etc/config
      - --webhook-url=http://localhost:9093/-/reload
      image: jimmidyson/configmap-reload:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-alertmanager-configmap-reload
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-alertmanager-token-crk8p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: prometheus-alertmanager
    serviceAccountName: prometheus-alertmanager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus-alertmanager
      name: config-volume
    - name: storage-volume
      persistentVolumeClaim:
        claimName: prometheus-alertmanager
    - name: prometheus-alertmanager-token-crk8p
      secret:
        defaultMode: 420
        secretName: prometheus-alertmanager-token-crk8p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:09Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://548b8316d96fe89516c52fa8d18c2f0b314faac8ea9f2da8e03ba51e5b73913a
      image: prom/alertmanager:v0.15.2
      imageID: docker-pullable://prom/alertmanager@sha256:3a4e2def45c4caa81f951cb98a32494c21181c5dd0cfd4a36e81bf60741cb9c0
      lastState:
        terminated:
          containerID: docker://6f0ba053aa4a7366ae207510656896d0e11275be8d74ca99d875e753301c9ef3
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:52:21Z"
      name: prometheus-alertmanager
      ready: true
      restartCount: 14
      state:
        running:
          startedAt: "2019-05-23T18:32:13Z"
    - containerID: docker://43c5d6dc59e81b7927c264dd30bba2057e3974c70f24359a12c0bdd2d0787dff
      image: jimmidyson/configmap-reload:v0.2.2
      imageID: docker-pullable://jimmidyson/configmap-reload@sha256:befec9f23d2a9da86a298d448cc9140f56a457362a7d9eecddba192db1ab489e
      lastState:
        terminated:
          containerID: docker://f7004085d9857df521045f6d68f7c7a0e503183dd1a074739844d03512bf8703
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: prometheus-alertmanager-configmap-reload
      ready: true
      restartCount: 15
      state:
        running:
          startedAt: "2019-05-23T18:35:55Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.34
    qosClass: BestEffort
    startTime: "2019-03-11T17:51:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-11T17:51:06Z"
    generateName: prometheus-kube-state-metrics-994584dc6-
    labels:
      app: prometheus
      chart: prometheus-8.6.1
      component: kube-state-metrics
      heritage: Tiller
      pod-template-hash: 994584dc6
      release: prometheus
    name: prometheus-kube-state-metrics-994584dc6-bw6r2
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-kube-state-metrics-994584dc6
      uid: 3e87ef49-4426-11e9-8d88-94c6911d33aa
    resourceVersion: "30324499"
    selfLink: /api/v1/namespaces/default/pods/prometheus-kube-state-metrics-994584dc6-bw6r2
    uid: 3eb7aae1-4426-11e9-8d88-94c6911d33aa
  spec:
    containers:
    - image: quay.io/coreos/kube-state-metrics:v1.4.0
      imagePullPolicy: IfNotPresent
      name: prometheus-kube-state-metrics
      ports:
      - containerPort: 8080
        name: metrics
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-kube-state-metrics-token-nwm4c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: prometheus-kube-state-metrics
    serviceAccountName: prometheus-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: prometheus-kube-state-metrics-token-nwm4c
      secret:
        defaultMode: 420
        secretName: prometheus-kube-state-metrics-token-nwm4c
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:30Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a86522d7578234e6ad31689c6ad3b8453858ca83db1fc7600ad47086075e86d1
      image: quay.io/coreos/kube-state-metrics:v1.4.0
      imageID: docker-pullable://quay.io/coreos/kube-state-metrics@sha256:6685342bbd645754b1aabdd9b663691109ec680645af261288289e62571ac201
      lastState:
        terminated:
          containerID: docker://6b727879ac2c5ac27ec6f0a7907e81dd80ae2ad093d0a04890edcf3718b1de3f
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:54:37Z"
      name: prometheus-kube-state-metrics
      ready: true
      restartCount: 18
      state:
        running:
          startedAt: "2019-05-23T18:33:28Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.47
    qosClass: BestEffort
    startTime: "2019-03-11T17:51:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-11T17:51:05Z"
    generateName: prometheus-node-exporter-
    labels:
      app: prometheus
      chart: prometheus-8.6.1
      component: node-exporter
      controller-revision-hash: 846d7b67dd
      heritage: Tiller
      pod-template-generation: "1"
      release: prometheus
    name: prometheus-node-exporter-72pv8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: prometheus-node-exporter
      uid: 3e5501e7-4426-11e9-8d88-94c6911d33aa
    resourceVersion: "30324502"
    selfLink: /api/v1/namespaces/default/pods/prometheus-node-exporter-72pv8
    uid: 3e6b55b8-4426-11e9-8d88-94c6911d33aa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - nuc-server
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      image: prom/node-exporter:v0.16.0
      imagePullPolicy: IfNotPresent
      name: prometheus-node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-node-exporter-token-9dd2s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: prometheus-node-exporter
    serviceAccountName: prometheus-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: prometheus-node-exporter-token-9dd2s
      secret:
        defaultMode: 420
        secretName: prometheus-node-exporter-token-9dd2s
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:28:58Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:28:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://faf961242c45e12fb20bf37b50956d1b61627de9b759feccd7626af504a57e97
      image: prom/node-exporter:v0.16.0
      imageID: docker-pullable://prom/node-exporter@sha256:55302581333c43d540db0e144cf9e7735423117a733cdec27716d87254221086
      lastState:
        terminated:
          containerID: docker://0df0a1270120906911f6a11f289ed02c5b8473b1326655bd82ace1deb5a077ad
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:40:54Z"
      name: prometheus-node-exporter
      ready: true
      restartCount: 20
      state:
        running:
          startedAt: "2019-05-23T18:28:35Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 192.168.0.6
    qosClass: BestEffort
    startTime: "2019-03-11T17:51:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-11T17:51:06Z"
    generateName: prometheus-pushgateway-7b85885b5c-
    labels:
      app: prometheus
      chart: prometheus-8.6.1
      component: pushgateway
      heritage: Tiller
      pod-template-hash: 7b85885b5c
      release: prometheus
    name: prometheus-pushgateway-7b85885b5c-25sh4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-pushgateway-7b85885b5c
      uid: 3e6f02a1-4426-11e9-8d88-94c6911d33aa
    resourceVersion: "30324694"
    selfLink: /api/v1/namespaces/default/pods/prometheus-pushgateway-7b85885b5c-25sh4
    uid: 3ea1eb1d-4426-11e9-8d88-94c6911d33aa
  spec:
    containers:
    - image: prom/pushgateway:v0.5.2
      imagePullPolicy: IfNotPresent
      name: prometheus-pushgateway
      ports:
      - containerPort: 9091
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /#/status
          port: 9091
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-pushgateway-token-qwrnc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: prometheus-pushgateway
    serviceAccountName: prometheus-pushgateway
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: prometheus-pushgateway-token-qwrnc
      secret:
        defaultMode: 420
        secretName: prometheus-pushgateway-token-qwrnc
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:32:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:32:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://06b6a9a036abb8bb56b395fe76d7a6ba0ac120828be6dbe1834d595de5566e33
      image: prom/pushgateway:v0.5.2
      imageID: docker-pullable://prom/pushgateway@sha256:4c9fa582c167f6fec89c6ebbd454ec1b5dba3ee0e1e21118fac6737c06861f92
      lastState:
        terminated:
          containerID: docker://89ac4cd11c50049e028ceb7e2ae1b7ec92fa431b9b1b74533b20fd137db20c3c
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:54:55Z"
      name: prometheus-pushgateway
      ready: true
      restartCount: 19
      state:
        running:
          startedAt: "2019-05-23T18:32:40Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.38
    qosClass: BestEffort
    startTime: "2019-03-11T17:51:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-03-11T17:51:06Z"
    generateName: prometheus-server-584bf66945-
    labels:
      app: prometheus
      chart: prometheus-8.6.1
      component: server
      heritage: Tiller
      pod-template-hash: 584bf66945
      release: prometheus
    name: prometheus-server-584bf66945-29st6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-server-584bf66945
      uid: 3e7e1125-4426-11e9-8d88-94c6911d33aa
    resourceVersion: "30324609"
    selfLink: /api/v1/namespaces/default/pods/prometheus-server-584bf66945-29st6
    uid: 3eb7ab29-4426-11e9-8d88-94c6911d33aa
  spec:
    containers:
    - args:
      - --volume-dir=/etc/config
      - --webhook-url=http://127.0.0.1:9090/-/reload
      image: jimmidyson/configmap-reload:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-server-configmap-reload
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-server-token-42hx9
        readOnly: true
    - args:
      - --config.file=/etc/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
      image: prom/prometheus:v2.4.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: prometheus-server
      ports:
      - containerPort: 9090
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-server-token-42hx9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - chown
      - -R
      - 65534:65534
      - /data
      image: busybox:latest
      imagePullPolicy: IfNotPresent
      name: init-chown-data
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: prometheus-server-token-42hx9
        readOnly: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: prometheus-server
    serviceAccountName: prometheus-server
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus-server
      name: config-volume
    - name: storage-volume
      persistentVolumeClaim:
        claimName: prometheus-server
    - name: prometheus-server-token-42hx9
      secret:
        defaultMode: 420
        secretName: prometheus-server-token-42hx9
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-13T06:20:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:38:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:38:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-11T17:51:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://23cf57d863613554144c08489d18b552884555e175bce4d3dca1def9027d73a8
      image: prom/prometheus:v2.4.3
      imageID: docker-pullable://prom/prometheus@sha256:2d79525389d68a309db843c1888f364823afbbef32ffea4741024d2ab9994dd6
      lastState:
        terminated:
          containerID: docker://7443f044b001a751d2335ebfcf8341a4f97a19e747077939ed1d5e330a419c3c
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-22T06:54:09Z"
      name: prometheus-server
      ready: true
      restartCount: 14
      state:
        running:
          startedAt: "2019-05-23T18:36:06Z"
    - containerID: docker://c263b6d639789b8c98c9acf53a87e3c810b65dda50473ccaae99679af83d7e70
      image: jimmidyson/configmap-reload:v0.2.2
      imageID: docker-pullable://jimmidyson/configmap-reload@sha256:befec9f23d2a9da86a298d448cc9140f56a457362a7d9eecddba192db1ab489e
      lastState:
        terminated:
          containerID: docker://ca4bd119b375cc9895f30c3281ddf30ed5759e5db7c4cfdb34de687c2eaf8ebe
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: prometheus-server-configmap-reload
      ready: true
      restartCount: 15
      state:
        running:
          startedAt: "2019-05-23T18:37:14Z"
    hostIP: 192.168.0.6
    initContainerStatuses:
    - containerID: docker://5aeafff1da970ac8707469e5df4a6c36e68e320b514e27d8d0566331f9b18516
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:061ca9704a714ee3e8b80523ec720c64f6209ad3f97c0ff7cb9ec7d19f15149f
      lastState: {}
      name: init-chown-data
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://5aeafff1da970ac8707469e5df4a6c36e68e320b514e27d8d0566331f9b18516
          exitCode: 0
          finishedAt: "2019-05-23T18:32:34Z"
          reason: Completed
          startedAt: "2019-05-23T18:32:30Z"
    phase: Running
    podIP: 10.244.0.37
    qosClass: BestEffort
    startTime: "2019-03-11T17:51:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: ac5a082a59ee63fbaf4b64d50e1528a154bdf54501defe8bfa331139531f1b1b
      checksum/health: 6ab2a968b720cbaa03f65ad146d11fbd216a33af80abe1ff5fc8ae8c86177993
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2019-05-21T17:57:22Z"
    generateName: redis-master-
    labels:
      app: redis
      chart: redis-5.5.0
      controller-revision-hash: redis-master-7bf694b4dd
      release: redis
      role: master
      statefulset.kubernetes.io/pod-name: redis-master-0
    name: redis-master-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-master
      uid: e1f59ba2-7bf1-11e9-807b-94c6911d33aa
    resourceVersion: "30324653"
    selfLink: /api/v1/namespaces/default/pods/redis-master-0
    uid: e22c3714-7bf1-11e9-807b-94c6911d33aa
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        if [[ -n $REDIS_PASSWORD_FILE ]]; then
          password_aux=`cat ${REDIS_PASSWORD_FILE}`
          export REDIS_PASSWORD=$password_aux
        fi
        ARGS=("--port" "${REDIS_PORT}")
        ARGS+=("--protected-mode" "no")
        ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
        ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
        /run.sh ${ARGS[@]}
      env:
      - name: REDIS_REPLICATION_MODE
        value: master
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_PORT
        value: "6379"
      image: docker.io/bitnami/redis:5.0.5
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_local.sh
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_local.sh
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-master-0
    initContainers:
    - command:
      - /bin/chown
      - -R
      - 1001:1001
      - /data
      image: docker.io/bitnami/minideb:latest
      imagePullPolicy: IfNotPresent
      name: volume-permissions
      resources: {}
      securityContext:
        procMount: Default
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-master
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: redis-data
      persistentVolumeClaim:
        claimName: redis-data-redis-master-0
    - configMap:
        defaultMode: 493
        name: redis-health
      name: health
    - configMap:
        defaultMode: 420
        name: redis
      name: config
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-21T17:57:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:36:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-21T17:57:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://474766efd28527c5444e784b99f2f9c81582689cf40d5c9c29ff499083065bdf
      image: bitnami/redis:5.0.5
      imageID: docker-pullable://bitnami/redis@sha256:c7bc93c9d1d71921775b8cd9b40dddfb791f26506e1dc974c72f66fcb3608cdd
      lastState:
        terminated:
          containerID: docker://e79aeea442f628c385f73b6184534117e4bd82be11bb2efde947dce507e69e1a
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: redis
      ready: true
      restartCount: 3
      state:
        running:
          startedAt: "2019-05-23T18:36:29Z"
    hostIP: 192.168.0.6
    initContainerStatuses:
    - containerID: docker://1740b3ad6628cf25c989cf0eb5fb34ea55831d396a4955a14e45355757b80c7f
      image: sha256:a5da2762fcbed90598d706e24c00b9371c354db3a40efdfb06fe92cdc5573b2e
      imageID: docker-pullable://bitnami/minideb@sha256:27d0947698e4eedba605565a2ec4238018551c5c22098b0ca240ff491407548d
      lastState: {}
      name: volume-permissions
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://1740b3ad6628cf25c989cf0eb5fb34ea55831d396a4955a14e45355757b80c7f
          exitCode: 0
          finishedAt: "2019-05-23T18:32:22Z"
          reason: Completed
          startedAt: "2019-05-23T18:32:21Z"
    phase: Running
    podIP: 10.244.0.36
    qosClass: BestEffort
    startTime: "2019-05-21T17:57:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: ac5a082a59ee63fbaf4b64d50e1528a154bdf54501defe8bfa331139531f1b1b
      checksum/health: 6ab2a968b720cbaa03f65ad146d11fbd216a33af80abe1ff5fc8ae8c86177993
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2019-05-21T17:57:22Z"
    generateName: redis-slave-d548b8969-
    labels:
      app: redis
      chart: redis-5.5.0
      pod-template-hash: d548b8969
      release: redis
      role: slave
    name: redis-slave-d548b8969-2cq65
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-slave-d548b8969
      uid: e1f70b68-7bf1-11e9-807b-94c6911d33aa
    resourceVersion: "30324522"
    selfLink: /api/v1/namespaces/default/pods/redis-slave-d548b8969-2cq65
    uid: e2176332-7bf1-11e9-807b-94c6911d33aa
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        if [[ -n $REDIS_PASSWORD_FILE ]]; then
          password_aux=`cat ${REDIS_PASSWORD_FILE}`
          export REDIS_PASSWORD=$password_aux
        fi
        if [[ -n $REDIS_MASTER_PASSWORD_FILE ]]; then
          password_aux=`cat ${REDIS_MASTER_PASSWORD_FILE}`
          export REDIS_MASTER_PASSWORD=$password_aux
        fi
        ARGS=("--port" "${REDIS_PORT}")
        ARGS+=("--protected-mode" "no")
        ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
        ARGS+=("--include" "/opt/bitnami/redis/etc/replica.conf")
        /run.sh "${ARGS[@]}"
      env:
      - name: REDIS_REPLICATION_MODE
        value: slave
      - name: REDIS_MASTER_HOST
        value: redis-master
      - name: REDIS_PORT
        value: "6379"
      - name: REDIS_MASTER_PORT_NUMBER
        value: "6379"
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      image: docker.io/bitnami/redis:5.0.5
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_local_and_master.sh
        failureThreshold: 5
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_local_and_master.sh
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: redis-health
      name: health
    - configMap:
        defaultMode: 420
        name: redis
      name: config
    - emptyDir: {}
      name: redis-data
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-21T17:57:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:37:51Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:37:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-21T17:57:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c3d915bf2de4979cfa0e175db6fdf8ae8b5d9b45c647bf10559795f77592c01c
      image: bitnami/redis:5.0.5
      imageID: docker-pullable://bitnami/redis@sha256:c7bc93c9d1d71921775b8cd9b40dddfb791f26506e1dc974c72f66fcb3608cdd
      lastState:
        terminated:
          containerID: docker://e094bcc17e40de4f5f3f08c574e43485e58a62196af854b17423637f691e5216
          exitCode: 0
          finishedAt: "2019-05-23T18:36:47Z"
          reason: Completed
          startedAt: "2019-05-23T18:33:51Z"
      name: redis
      ready: true
      restartCount: 53
      state:
        running:
          startedAt: "2019-05-23T18:37:39Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.48
    qosClass: BestEffort
    startTime: "2019-05-21T17:57:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: ac5a082a59ee63fbaf4b64d50e1528a154bdf54501defe8bfa331139531f1b1b
      checksum/health: 6ab2a968b720cbaa03f65ad146d11fbd216a33af80abe1ff5fc8ae8c86177993
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2019-05-21T17:57:22Z"
    generateName: redis-slave-d548b8969-
    labels:
      app: redis
      chart: redis-5.5.0
      pod-template-hash: d548b8969
      release: redis
      role: slave
    name: redis-slave-d548b8969-lcmfz
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-slave-d548b8969
      uid: e1f70b68-7bf1-11e9-807b-94c6911d33aa
    resourceVersion: "30324593"
    selfLink: /api/v1/namespaces/default/pods/redis-slave-d548b8969-lcmfz
    uid: e22bc506-7bf1-11e9-807b-94c6911d33aa
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        if [[ -n $REDIS_PASSWORD_FILE ]]; then
          password_aux=`cat ${REDIS_PASSWORD_FILE}`
          export REDIS_PASSWORD=$password_aux
        fi
        if [[ -n $REDIS_MASTER_PASSWORD_FILE ]]; then
          password_aux=`cat ${REDIS_MASTER_PASSWORD_FILE}`
          export REDIS_MASTER_PASSWORD=$password_aux
        fi
        ARGS=("--port" "${REDIS_PORT}")
        ARGS+=("--protected-mode" "no")
        ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
        ARGS+=("--include" "/opt/bitnami/redis/etc/replica.conf")
        /run.sh "${ARGS[@]}"
      env:
      - name: REDIS_REPLICATION_MODE
        value: slave
      - name: REDIS_MASTER_HOST
        value: redis-master
      - name: REDIS_PORT
        value: "6379"
      - name: REDIS_MASTER_PORT_NUMBER
        value: "6379"
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      image: docker.io/bitnami/redis:5.0.5
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_local_and_master.sh
        failureThreshold: 5
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_local_and_master.sh
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: redis-health
      name: health
    - configMap:
        defaultMode: 420
        name: redis
      name: config
    - emptyDir: {}
      name: redis-data
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-21T17:57:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:38:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:38:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-21T17:57:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2bd326e8330dcb30096d0ac5680f8c3dde42f439ec3b42fabd3ae16f27ca3c70
      image: bitnami/redis:5.0.5
      imageID: docker-pullable://bitnami/redis@sha256:c7bc93c9d1d71921775b8cd9b40dddfb791f26506e1dc974c72f66fcb3608cdd
      lastState:
        terminated:
          containerID: docker://2e263b91bbbe0f0214ab4dc34aff1cece2b33f316f06f6ecf4b91f2199bbb9ae
          exitCode: 0
          finishedAt: null
          startedAt: null
      name: redis
      ready: true
      restartCount: 58
      state:
        running:
          startedAt: "2019-05-23T18:35:27Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.52
    qosClass: BestEffort
    startTime: "2019-05-21T17:57:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-23T06:41:13Z"
    generateName: sudojoss-6cf7f75d7f-
    labels:
      app: sudojoss
      pod-template-hash: 6cf7f75d7f
    name: sudojoss-6cf7f75d7f-rhz26
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: sudojoss-6cf7f75d7f
      uid: c233dd99-7d25-11e9-8104-94c6911d33aa
    resourceVersion: "30324531"
    selfLink: /api/v1/namespaces/default/pods/sudojoss-6cf7f75d7f-rhz26
    uid: c252af28-7d25-11e9-8104-94c6911d33aa
  spec:
    containers:
    - image: jphuc96/sudojoss-landing-page:latest
      imagePullPolicy: Always
      name: sudojoss
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T06:41:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:16Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T18:33:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-23T06:41:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9682d0a41d781b788cf75271eae220b5e2e8feb81cd4d29e660deeffcef785dd
      image: jphuc96/sudojoss-landing-page:latest
      imageID: docker-pullable://jphuc96/sudojoss-landing-page@sha256:4adaaf0dec6742a9e38409287afbf3dde47aa333432b6e96c1cfdc25a966c98e
      lastState:
        terminated:
          containerID: docker://6b58091965abaf8c8349850a1bdaf6cfa5de4335c1898679a94b369de3c06cdc
          exitCode: 255
          finishedAt: "2019-05-23T18:21:50Z"
          reason: Error
          startedAt: "2019-05-23T06:41:27Z"
      name: sudojoss
      ready: true
      restartCount: 1
      state:
        running:
          startedAt: "2019-05-23T18:33:09Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.41
    qosClass: BestEffort
    startTime: "2019-05-23T06:41:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-24T16:27:17Z"
    generateName: webhook-
    labels:
      app: webhook
      controller-revision-hash: webhook-74c74f4b45
      statefulset.kubernetes.io/pod-name: webhook-0
    name: webhook-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: webhook
      uid: 7f69cbd5-7e40-11e9-8dca-94c6911d33aa
    resourceVersion: "30324667"
    selfLink: /api/v1/namespaces/default/pods/webhook-0
    uid: cbcf8979-7e40-11e9-8dca-94c6911d33aa
  spec:
    containers:
    - args:
      - php
      - artisan
      - queue:work
      - --daemon
      - --tries=3
      - --timeout=10
      env:
      - name: APP_DEBUG
        value: "true"
      - name: APP_ENV
        value: dev
      - name: APP_LOG
        value: errorlog
      - name: APP_URL
        value: https://webhook.sudojoss.com
      - name: BROADCAST_DRIVER
        value: redis
      - name: CACHE_DRIVER
        value: redis
      - name: DB_CONNECTION
        value: sqlite
      - name: ECHO_HOST_MODE
        value: path
      - name: QUEUE_DRIVER
        value: redis
      - name: REDIS_HOST
        value: redis-master.default.svc.cluster.local
      image: fredsted/webhook.site
      imagePullPolicy: Always
      name: webhook
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: webhook-0
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3a4e1140f8eea247bb3a267180ac810cd2d0860adaecd5c75dde37c01ae52a37
      image: fredsted/webhook.site:latest
      imageID: docker-pullable://fredsted/webhook.site@sha256:23b3dd1b7080589a8e0b85864169c2d150acf73e3e5614a3c7e66e11e7313bca
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-05-24T16:27:29Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.71
    qosClass: BestEffort
    startTime: "2019-05-24T16:27:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-05-24T16:27:31Z"
    generateName: webhook-
    labels:
      app: webhook
      controller-revision-hash: webhook-74c74f4b45
      statefulset.kubernetes.io/pod-name: webhook-1
    name: webhook-1
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: webhook
      uid: 7f69cbd5-7e40-11e9-8dca-94c6911d33aa
    resourceVersion: "30324606"
    selfLink: /api/v1/namespaces/default/pods/webhook-1
    uid: d40b9d23-7e40-11e9-8dca-94c6911d33aa
  spec:
    containers:
    - args:
      - php
      - artisan
      - queue:work
      - --daemon
      - --tries=3
      - --timeout=10
      env:
      - name: APP_DEBUG
        value: "true"
      - name: APP_ENV
        value: dev
      - name: APP_LOG
        value: errorlog
      - name: APP_URL
        value: https://webhook.sudojoss.com
      - name: BROADCAST_DRIVER
        value: redis
      - name: CACHE_DRIVER
        value: redis
      - name: DB_CONNECTION
        value: sqlite
      - name: ECHO_HOST_MODE
        value: path
      - name: QUEUE_DRIVER
        value: redis
      - name: REDIS_HOST
        value: redis-master.default.svc.cluster.local
      image: fredsted/webhook.site
      imagePullPolicy: Always
      name: webhook
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-8txh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: webhook-1
    nodeName: nuc-server
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-8txh5
      secret:
        defaultMode: 420
        secretName: default-token-8txh5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-05-24T16:27:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://53b01799990742e75db03d17034945b1262c42c1e7258e268af45099780ab2d5
      image: fredsted/webhook.site:latest
      imageID: docker-pullable://fredsted/webhook.site@sha256:23b3dd1b7080589a8e0b85864169c2d150acf73e3e5614a3c7e66e11e7313bca
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-05-24T16:27:45Z"
    hostIP: 192.168.0.6
    phase: Running
    podIP: 10.244.0.72
    qosClass: BestEffort
    startTime: "2019-05-24T16:27:31Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
